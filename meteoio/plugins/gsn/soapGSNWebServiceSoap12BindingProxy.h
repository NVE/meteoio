/* soapGSNWebServiceSoap12BindingProxy.h
   Generated by gSOAP 2.7.9l from GSNWebService.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapGSNWebServiceSoap12BindingProxy_H
#define soapGSNWebServiceSoap12BindingProxy_H
#include "soapH.h"

class SOAP_CMAC GSNWebServiceSoap12BindingProxy : public soap
{ public:
	/// Endpoint URL of service 'GSNWebServiceSoap12BindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	GSNWebServiceSoap12BindingProxy();
	/// Constructor with engine input+output mode control
	GSNWebServiceSoap12BindingProxy(soap_mode iomode);
	/// Constructor with engine input and output mode control
	GSNWebServiceSoap12BindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~GSNWebServiceSoap12BindingProxy();
	/// Initializer used by constructor
	virtual	void GSNWebServiceSoap12BindingProxy_init(soap_mode imode, soap_mode omode);
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Web service operation 'getContainerInfo' (return error code or SOAP_OK)
	virtual	int getContainerInfo(_ns1__getContainerInfo *ns1__getContainerInfo, _ns1__getContainerInfoResponse *ns1__getContainerInfoResponse);
	/// Web service operation 'getMultiData' (return error code or SOAP_OK)
	virtual	int getMultiData(_ns1__getMultiData *ns1__getMultiData, _ns1__getMultiDataResponse *ns1__getMultiDataResponse);
	/// Web service operation 'listVirtualSensorNames' (return error code or SOAP_OK)
	virtual	int listVirtualSensorNames(_ns1__listVirtualSensorNames *ns1__listVirtualSensorNames, _ns1__listVirtualSensorNamesResponse *ns1__listVirtualSensorNamesResponse);
	/// Web service operation 'getNextData' (return error code or SOAP_OK)
	virtual	int getNextData(_ns1__getNextData *ns1__getNextData, _ns1__getNextDataResponse *ns1__getNextDataResponse);
	/// Web service operation 'registerQuery' (return error code or SOAP_OK)
	virtual	int registerQuery(_ns1__registerQuery *ns1__registerQuery, _ns1__registerQueryResponse *ns1__registerQueryResponse);
	/// Web service operation 'unregisterQuery' (return error code or SOAP_OK)
	virtual	int unregisterQuery(_ns1__unregisterQuery *ns1__unregisterQuery, _ns1__unregisterQueryResponse *ns1__unregisterQueryResponse);
	/// Web service operation 'getLatestMultiData' (return error code or SOAP_OK)
	virtual	int getLatestMultiData(_ns1__getLatestMultiData *ns1__getLatestMultiData, _ns1__getLatestMultiDataResponse *ns1__getLatestMultiDataResponse);
	/// Web service operation 'deleteVirtualSensor' (return error code or SOAP_OK)
	virtual	int deleteVirtualSensor(_ns1__deleteVirtualSensor *ns1__deleteVirtualSensor, _ns1__deleteVirtualSensorResponse *ns1__deleteVirtualSensorResponse);
	/// Web service operation 'getVirtualSensorsDetails' (return error code or SOAP_OK)
	virtual	int getVirtualSensorsDetails(_ns1__getVirtualSensorsDetails *ns1__getVirtualSensorsDetails, _ns1__getVirtualSensorsDetailsResponse *ns1__getVirtualSensorsDetailsResponse);
	/// Web service operation 'createVirtualSensor' (return error code or SOAP_OK)
	virtual	int createVirtualSensor(_ns1__createVirtualSensor *ns1__createVirtualSensor, _ns1__createVirtualSensorResponse *ns1__createVirtualSensorResponse);
	/// Web service operation 'listWrapperURLs' (return error code or SOAP_OK)
	virtual	int listWrapperURLs(_ns1__listWrapperURLs *ns1__listWrapperURLs, _ns1__listWrapperURLsResponse *ns1__listWrapperURLsResponse);
};
#endif
