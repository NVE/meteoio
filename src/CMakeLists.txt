#OPTION( BUILD_SHARED_LIBS "Set to OFF to build static libraries" ON )
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/src")

SET(meteoio_sources 
	MeteoFilter.cc
	FilterAlgorithms.cc
  	A3DIO.cc
	Date_IO.cc         
	Grid2DObject.cc  
	IOHandler.cc    
	LegacyIO.cc       
	Coords.cc
	Meteo2DInterpolator.cc  
	BufferedIOHandler.cc  
	DEMObject.cc       
	Grid3DObject.cc  
	IOInterface.cc  
	libinterpol1D.cc  
	StationData.cc
	ConfigReader.cc       
	DynamicLibrary.cc  
	IOExceptions.cc  
	IOUtils.cc
	libinterpol2D.cc  
	MeteoData.cc
)

ADD_LIBRARY(${PROJECT_NAME} ${meteoio_sources})
ADD_LIBRARY(${PROJECT_NAME}_STATIC STATIC ${meteoio_sources})

IF(PROJ4)
  FIND_PATH(LIBPROJ_INCLUDE_DIR "proj_api.h")
  FIND_LIBRARY(LIBPROJ proj)
  INCLUDE_DIRECTORIES(${LIBPROJ_INCLUDE_DIR})
  TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${LIBPROJ})
  ADD_DEFINITIONS(-DPROJ4)
ENDIF(PROJ4)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES 
  LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
  ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
  CLEAN_DIRECT_OUTPUT 1
  VERSION 0.1.0
  SOVERSION 0.1.0
  )
SET_TARGET_PROPERTIES(${PROJECT_NAME}_STATIC PROPERTIES 
  LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
  ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/lib
  CLEAN_DIRECT_OUTPUT 1
  OUTPUT_NAME ${PROJECT_NAME}
  VERSION 0.1.0
  SOVERSION 0.1.0
  )

#install targets:
INSTALL(TARGETS ${PROJECT_NAME} ${PROJECT_NAME}_STATIC
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
)

FILE(GLOB files "${PROJECT_SOURCE_DIR}/src/*.h")
INSTALL(FILES ${files} DESTINATION include)
