#
# Makefile for the METEOIO Library
#
#Destination system: either zeus, grid or safe

#Prefix: 	@prefix@

####### USER CONFIGURATION
# build mode: release or debug
MODE	 = @MODE@

# plugins to build (yes/no)
BORMAIO 	= @BORMAIO@
IMISIO		= @IMISIO@
GEOTOPIO	= @GEOTOPIO@
GSNIO		= @GSNIO@
ARCIO		= @ARCIO@
GRASSIO		= @GRASSIO@
PROJ4		= @PROJ4@

####### COMPILERS AND OPTIONS
#SVNREV_GEN	= $(shell main/version.sh)
#SVNREV		= $(eval SVNREV := $(SVNREV_GEN))$(SVNREV)

CC		= @CC@ -DGNU
CXX		= @CXX@
LINKER		= @CXX@ -DGNU
POPCC		= popcc

DEBUG		= -g -O0 -D__DEBUG #-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC #-dr
debug_arithm	= -DDEBUG_ARITHM -g
WARNING		= @WARNING@ @EXTRA_WARN@ #-Weffc++ #-pedantic-errors #-Werror
ARCH		= @ARCH@
OPTIM		= @OPTIM@
MAKE_OPTIM	= @MAKE_OPTIM@

ifeq ($(MODE),debug)		#for debug
	CFLAGS   = $(debug_arithm) $(MAKE_OPTIM) $(ARCH) $(DEBUG) $(WARNING)
	CCFLAGS  = $(debug_arithm) $(MAKE_OPTIM) $(ARCH) $(DEBUG) $(WARNING)
	FFLAGS	 = $(debug_arithm) $(MAKE_OPTIM) $(DEBUG) $(WARNING)
else				#for release
	CFLAGS   = $(debug_arithm) $(MAKE_OPTIM) $(ARCH) $(OPTIM) $(WARNING)
	CCFLAGS  = $(debug_arithm) $(MAKE_OPTIM) $(ARCH) $(OPTIM) $(WARNING)
	FFLAGS	 = $(debug_arithm) $(MAKE_OPTIM) $(FFOPTIM) $(WARNING)
endif
#CCFLAGS += -DSVNREV="\"$(SVNREV)\""

#################################################
# END USER OPTIONS
#################################################

####### DIRECTORIES
TARGET		= meteoio
#TARGET_POPC	= meteoio_par
SRCDIR		= ./src
PLUGINDIR	= ./src/plugins
LIBDIR		= ./lib
TOOLSDIR	= ./tools
export prefix		= @prefix@
export exec_prefix	= @exec_prefix@

LIBS		= -lc -ldl -lm -lstdc++
LDFLAGS_SEQ	= -L$(LIBDIR) -lmeteoio 
LD_POPC	= -L$(LIBDIR) -lmeteoiopopc
LDFLAGS_POPC	= $(LD_POPC)
LDFLAGS		= $(LIBS) -rdynamic
INCLUDE		= -I$(SRCDIR)
ifeq ($(PROJ4),yes)
#warning: this is a bug on architectures other than ix386: one can not mix PIC and PDC code
	PROJ4_STATIC =  @PROJ4_LIBS@
	CCFLAGS += -DPROJ4
endif

######## Sources, objects, headers
METEOIO_OBJ = 	$(SRCDIR)/MeteoData.o \
		$(SRCDIR)/StationData.o \
		$(SRCDIR)/IOHandler.o \
		$(SRCDIR)/IOInterface.o \
		$(SRCDIR)/DynamicLibrary.o \
		$(SRCDIR)/A3DIO.o \
		$(SRCDIR)/BufferedIOHandler.o \
		$(SRCDIR)/ConfigReader.o \
		$(SRCDIR)/Date_IO.o \
		$(SRCDIR)/Grid2DObject.o \
		$(SRCDIR)/Grid3DObject.o \
		$(SRCDIR)/MeteoFilter.o \
		$(SRCDIR)/FilterAlgorithms.o \
		$(SRCDIR)/DEMObject.o \
		$(SRCDIR)/IOExceptions.o \
		$(SRCDIR)/IOUtils.o \
		$(SRCDIR)/Coords.o \
		$(SRCDIR)/libinterpol2D.o \
		$(SRCDIR)/libinterpol1D.o \
		$(SRCDIR)/Meteo2DInterpolator.o \
		$(SRCDIR)/LegacyIO.o 

METEOIO_OBJ_POPC =  $(SRCDIR)/IOInterface_par.o \
		$(SRCDIR)/LegacyIO_par.o \
		$(SRCDIR)/IOInterface_par.o \
		$(SRCDIR)/IOHandler.stub.o \
		$(SRCDIR)/IOHandler_par.o \
		$(SRCDIR)/BufferedIOHandler_par.o \
		$(SRCDIR)/A3DIO_par.o \
		$(SRCDIR)/LegacyIO.stub.o \
		$(SRCDIR)/MeteoData_par.o \
		$(SRCDIR)/StationData_par.o \
		$(SRCDIR)/ConfigReader_par.o \
		$(SRCDIR)/Date_IO_par.o \
		$(SRCDIR)/Grid2DObject_par.o \
		$(SRCDIR)/Grid3DObject_par.o \
		$(SRCDIR)/MeteoFilter_par.o \
		$(SRCDIR)/FilterAlgorithms_par.o \
		$(SRCDIR)/DEMObject_par.o \
		$(SRCDIR)/IOExceptions_par.o \
		$(SRCDIR)/IOUtils_par.o \
		$(SRCDIR)/Coords_par.o \
		$(SRCDIR)/libinterpol2D_par.o \
		$(SRCDIR)/libinterpol1D_par.o \
		$(SRCDIR)/Meteo2DInterpolator_par.o \
		$(SRCDIR)/DynamicLibrary_par.o \
		$(SRCDIR)/marshal_meteoio_par.o 

TOOLS_OBJ =	$(TOOLSDIR)/createA3DFiles.o

####### Build rules SEQ

all: seq 
	@echo -e "*** MeteoIO compiled as \033[36m$(MODE)\033[0m"

help:
	@echo -e "MeteoIO Makefile targets:" 
	@echo -e " \033[36mseq\033[0m"
	@echo -e " \033[36mcreateA3DFiles\033[0m"
	@echo -e " \033[36mpar\033[0m"
	@echo -e " \033[36minstall\033[0m"
	@echo -e " \033[36mclean\033[0m"
	@echo -e " \033[36mdistclean\033[0m"
	@echo -e " \033[36mdocumentation\033[0m"

seq: $(LIBDIR)/libmeteoio.a build_dynamiclibs

build_dynamiclibs: $(LIBDIR)/libbormaio.so \
			$(LIBDIR)/libimisio.so \
			$(LIBDIR)/libgeotopio.so \
			$(LIBDIR)/libgsnio.so \
			$(LIBDIR)/libarcio.so \
			$(LIBDIR)/libgrassio.so 

############## POPC ##############
par: $(LIBDIR)/libmeteoiopopc.a  build_dynamiclibs_par meteoIO_module_par
	@echo -e "*** MeteoIO-Popc+ compiled as \033[36m$(MODE)\033[0m"

build_dynamiclibs_par:  $(LIBDIR)/libarciopopc.so \
			$(LIBDIR)/libgrassiopopc.so 

meteoIO_module_par: $(LIBDIR)/meteoio.module
##############  END  ##############

clean:
	-rm -f $(SRCDIR)/*~ $(SRCDIR)/*.o $(TOOLSDIR)/*.o $(PLUGINDIR)/*.o
#	cd $(PLUGINDIR)/gsn; make clean

distclean: clean
	-rm -f $(TOOLSDIR)/createA3DFiles
	-rm -f $(LIBDIR)/*.a $(LIBDIR)/*.so $(LIBDIR)/*.module

.PHONY: install
install:
	@echo **** Installing MeteoIO
	mkdir -p @includedir@/meteoio
	mkdir -p @libdir@/meteoio
	cp src/*.h @includedir@/meteoio
	cp src/*.ph @includedir@/meteoio
	-cp lib/*.a @libdir@/meteoio
	-cp lib/*.so @libdir@/meteoio
	-cp lib/*.module @libdir@/meteoio

documentation:
	doxygen $(SRCDIR)/config.dox

createA3DFiles: $(TOOLS_OBJ)
	$(CXX) $(CCFLAGS) $< $(INCLUDE) $(LDFLAGS_SEQ) $(LDFLAGS) -o $(TOOLSDIR)/$@

####### Compile

.cc.o: $*.cc $*.h
	$(CXX) $(CCFLAGS) -fPIC -c $< $(INCLUDE) -o $@

%_par.o : %.cc
	$(POPCC) $(CCFLAGS) -fPIC -c $< $(INCLUDE) -o $@

%.stub.o : %.ph
	$(POPCC) $(CCFLAGS) -fPIC -c $< $(INCLUDE) -o $@


$(LIBDIR)/libmeteoio.a: $(METEOIO_OBJ)
	@echo -e **** Compiling libmeteoIO
	ar -r $@ $(METEOIO_OBJ) $(PROJ4_STATIC)
	ranlib $@

$(LIBDIR)/libmeteoiopopc.a:  $(METEOIO_OBJ_POPC)
	@echo -e **** Compiling libmeteoIOpopc
	ar -r $@ $(METEOIO_OBJ_POPC) $(PROJ4_STATIC)
	ranlib $@

# Dynamic libraries seq

$(LIBDIR)/libbormaio.so: $(PLUGINDIR)/BormaIO.cc $(PLUGINDIR)/BormaIO.h $(LIBDIR)/libmeteoio.a
ifeq ($(BORMAIO),yes)
	@echo **** Compiling Borma plugin
	$(CXX) $(CCFLAGS) -fPIC $(INCLUDE) @XMLPP_CFLAGS@ -c -o $(PLUGINDIR)/BormaIO.o $(PLUGINDIR)/BormaIO.cc
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-soname,libbormaio.so -o $@ $(PLUGINDIR)/BormaIO.o $(LDFLAGS) @XMLPP_LIBS@
endif

$(LIBDIR)/libgeotopio.so:$(PLUGINDIR)/GeotopIO.cc $(PLUGINDIR)/GeotopIO.h $(LIBDIR)/libmeteoio.a
ifeq ($(GEOTOPIO),yes)
	@echo **** Compiling GeoTOP plugin
	$(CXX) $(CCFLAGS) -fPIC $(INCLUDE) -c -o $(PLUGINDIR)/GeotopIO.o $(PLUGINDIR)/GeotopIO.cc 
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-soname,libgeotopio.so -o $@ $(PLUGINDIR)/GeotopIO.o $(LDFLAGS)
endif

$(LIBDIR)/libarcio.so:$(PLUGINDIR)/ARCIO.cc $(PLUGINDIR)/ARCIO.h $(LIBDIR)/libmeteoio.a
ifeq ($(ARCIO),yes)
	@echo **** Compiling ARC file plugin
	$(CXX) $(CCFLAGS) -fPIC $(INCLUDE) -c -o $(PLUGINDIR)/ARCIO.o $(PLUGINDIR)/ARCIO.cc 
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-soname,libarcio.so -o $@ $(PLUGINDIR)/ARCIO.o $(LDFLAGS)
endif

$(LIBDIR)/libgrassio.so:$(PLUGINDIR)/GrassIO.cc $(PLUGINDIR)/GrassIO.h $(LIBDIR)/libmeteoio.a
ifeq ($(GRASSIO),yes)
	@echo **** Compiling GRASS file plugin
	$(CXX) $(CCFLAGS) -fPIC $(INCLUDE) -c -o $(PLUGINDIR)/GrassIO.o $(PLUGINDIR)/GrassIO.cc 
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-soname,libgrassio.so -o $@ $(PLUGINDIR)/GrassIO.o $(LDFLAGS)
endif

$(LIBDIR)/libgsnio.so:$(PLUGINDIR)/GSNIO.cc $(PLUGINDIR)/GSNIO.h $(LIBDIR)/libmeteoio.a
ifeq ($(GSNIO),yes)
	@echo **** Compiling GSN plugin
	cd $(PLUGINDIR)/gsn; make
	$(CXX) $(CCFLAGS) -fPIC $(INCLUDE) @GSOAPPP_CFLAGS@ -c -o $(PLUGINDIR)/GSNIO.o $(PLUGINDIR)/GSNIO.cc 
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-soname,libgsnio.so -o $@ $(PLUGINDIR)/GSNIO.o $(PLUGINDIR)/gsn/soapA3DWebServiceSoap12BindingProxy.o $(PLUGINDIR)/gsn/soapC.o $(LDFLAGS) @GSOAPPP_LIBS@ 
endif

$(LIBDIR)/libimisio.so: $(PLUGINDIR)/ImisIO.cc $(PLUGINDIR)/ImisIO.h $(LIBDIR)/libmeteoio.a
ifeq ($(IMISIO),yes)
	@echo **** Compiling Imis plugin
	$(CXX) $(CCFLAGS) -fPIC $(INCLUDE) -I$(ORACLE_HOME)/rdbms/public $(PLUGINDIR)/ImisIO.cc -c -o $(PLUGINDIR)/ImisIO.o
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-rpath,$(ORACLE_HOME)/lib,-soname,libimisio.so -o $@ $(PLUGINDIR)/ImisIO.o $(LDFLAGS) -L$(ORACLE_HOME)/lib -locci -lclntsh -lstdc++
endif

# Dynamic libraries par
$(LIBDIR)/libgrassiopopc.so:$(PLUGINDIR)/GrassIO.cc $(PLUGINDIR)/GrassIO.h $(LIBDIR)/libmeteoiopopc.a
ifeq ($(GRASSIO),yes)
	@echo **** Compiling GRASS file plugin
	$(POPCC) $(CCFLAGS) -fPIC $(INCLUDE) -c -o $(PLUGINDIR)/GrassIO.o $(PLUGINDIR)/GrassIO.cc 
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-soname,libgrassio.so -o $@ $(PLUGINDIR)/GrassIO.o $(LDFLAGS_POPC) $(LDFLAGS)
endif

$(LIBDIR)/libarciopopc.so:$(PLUGINDIR)/ARCIO.cc $(PLUGINDIR)/ARCIO.h $(LIBDIR)/libmeteoiopopc.a
ifeq ($(ARCIO),yes)
	@echo **** Compiling ARC file plugin
	$(POPCC) $(CCFLAGS) -fPIC $(INCLUDE) -c -o $(PLUGINDIR)/ARCIO.o $(PLUGINDIR)/ARCIO.cc 
	$(CXX) $(CCFLAGS) -rdynamic -shared -Wl,-soname,libarcio.so -o $@ $(PLUGINDIR)/ARCIO.o $(LDFLAGS_POPC) $(LDFLAGS)
endif

######
$(LIBDIR)/meteoio.module: $(LIBDIR)/libmeteoiopopc.a $(SRCDIR)/PackMeteoIO_par.o
	$(POPCC) $(CCFLAGS) -object -parocld=$(LINKER) -o $@ $(SRCDIR)/PackMeteoIO_par.o $(LDFLAGS) $(LDFLAGS_POPC)
